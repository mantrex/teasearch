<?php

/**
 * @file
 * Install, update and uninstall functions for the Custom Field module.
 */

use Drupal\field\Entity\FieldConfig;

/**
 * Update entity field definitions for new 'size' setting.
 *
 * @see https://www.drupal.org/project/custom_field/issues/3379711
 */
function custom_field_update_8001() {
  $entity_type_manager = \Drupal::entityTypeManager();
  $entity_type_manager->clearCachedDefinitions();
  $entity_type_ids = [];
  $change_summary = \Drupal::service('entity.definition_update_manager')->getChangeSummary();
  foreach ($change_summary as $entity_type_id => $change_list) {
    $entity_type = $entity_type_manager->getDefinition($entity_type_id);
    \Drupal::entityDefinitionUpdateManager()->installEntityType($entity_type);
    $entity_type_ids[] = $entity_type_id;
  }

  return t("Installed/Updated the entity type(s): @entity_type_ids", [
    '@entity_type_ids' => implode(', ', $entity_type_ids),
  ]);
}

/**
 * Update entity field definitions for new 'datetime_type' setting.
 */
function custom_field_update_8002() {
  $entity_type_manager = \Drupal::entityTypeManager();
  $entity_type_manager->clearCachedDefinitions();
  $entity_type_ids = [];
  $change_summary = \Drupal::service('entity.definition_update_manager')->getChangeSummary();
  foreach ($change_summary as $entity_type_id => $change_list) {
    $entity_type = $entity_type_manager->getDefinition($entity_type_id);
    \Drupal::entityDefinitionUpdateManager()->installEntityType($entity_type);
    $entity_type_ids[] = $entity_type_id;
  }

  return t("Installed/Updated the entity type(s): @entity_type_ids", [
    '@entity_type_ids' => implode(', ', $entity_type_ids),
  ]);
}

/**
 * Deprecate and replace the 'CustomField' widget with 'Flexbox'.
 */
function custom_field_update_8003() {
  $entity_type_manager = \Drupal::entityTypeManager();
  $entity_field_manager = \Drupal::service('entity_field.manager');

  // Get the entity field map for fields of type 'custom'.
  $entity_field_map = $entity_field_manager->getFieldMapByFieldType('custom');
  $updated = [];

  // Iterate through the field map.
  foreach ($entity_field_map as $entity_type_id => $fields) {
    foreach ($fields as $field_name => $field_info) {
      foreach ($field_info['bundles'] as $bundle) {
        $field = FieldConfig::loadByName($entity_type_id, $bundle, $field_name);
        if (!$field) {
          continue 2;
        }
        // Load the form display for the current entity type.
        /** @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface $form_display */
        $form_display = $entity_type_manager->getStorage('entity_form_display')
          ->load($entity_type_id . '.' . $bundle . '.default');
        if ($form_display) {
          // Get the widget type from the field info.
          $component = $form_display->getComponent($field_name);
          if ($component['type'] == 'custom_default') {
            $form_display->setComponent($field_name, [
              'type' => 'custom_flex',
              'settings' => [],
            ]);
            $form_display->save();
            $updated[] = $entity_type_id . '.' . $bundle . '.' . $field_name;
          }
        }
      }
    }
  }

  // Clear the Drupal cache to apply the changes.
  $entity_type_manager->clearCachedDefinitions();
  if (!empty($updated)) {
    return t("Updated the display components to the <em>Flexbox</em> display for the following field(s). You should visit the <em>Manage form display</em> page for further configuration. : @fields", [
      '@fields' => implode(', ', $updated),
    ]);
  }

  return t("No existing display components were impacted by this update.");
}

/**
 * Update entity field definitions for new 'image' field.
 */
function custom_field_update_8004() {
  $entity_type_manager = \Drupal::entityTypeManager();
  $entity_type_manager->clearCachedDefinitions();
  $change_summary = \Drupal::service('entity.definition_update_manager')->getChangeSummary();
  foreach ($change_summary as $entity_type_id => $change_list) {
    $entity_type = $entity_type_manager->getDefinition($entity_type_id);
    \Drupal::entityDefinitionUpdateManager()->installEntityType($entity_type);
  }
}
